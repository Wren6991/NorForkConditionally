#include <avr/pgmspace.h>

const uint8_t pin_e = 0x04;  //e: WE_HADDR
const uint8_t pin_f = 0x08;  //f: WE_LADDR
const uint8_t pin_g = 0x10;  //g: OE_ROM
const uint8_t pin_h = 0x20;  //h: WE_ROM

#define ROM_BASE 0x0

#define ROM_SIZE 0xda8

/*const char rombuffer[] = {
0xbf, 0xff, 0x00, 0x18, 0x00, 0x08, 0x00, 0x08,
0xbf, 0xff, 0xc0, 0x01, 0x00, 0x10, 0x00, 0x10,
0xc0, 0x00, 0xbf, 0xff, 0x00, 0x00, 0x00, 0x00,
0xff
};*/

const char rombuffer[] PROGMEM = 
{
0xbf, 0xc2, 0x7d, 0x00, 0x00, 0x08, 0x00, 0x08,
0xbf, 0xc2, 0x7d, 0x83, 0x00, 0x10, 0x00, 0x10,
0xbf, 0xc3, 0x7d, 0x00, 0x00, 0x18, 0x00, 0x18,
0xbf, 0xc3, 0x7d, 0x00, 0x00, 0x20, 0x00, 0x20,
0xbf, 0xc4, 0x7d, 0x00, 0x00, 0x28, 0x00, 0x28,
0xbf, 0xc4, 0x7d, 0x41, 0x00, 0x30, 0x00, 0x30,
0xbf, 0xc5, 0x7d, 0x00, 0x00, 0x38, 0x00, 0x38,
0xbf, 0xc5, 0x7d, 0x38, 0x00, 0x40, 0x00, 0x40,
0xbf, 0xc6, 0x7d, 0x00, 0x00, 0x48, 0x00, 0x48,
0xbf, 0xc6, 0x7d, 0x41, 0x00, 0x50, 0x00, 0x50,
0xbf, 0xc7, 0x7d, 0x00, 0x00, 0x58, 0x00, 0x58,
0xbf, 0xc7, 0x7d, 0x38, 0x00, 0x60, 0x00, 0x60,
0xbf, 0xca, 0x7d, 0x00, 0x00, 0x68, 0x00, 0x68,
0xbf, 0xca, 0x7d, 0x41, 0x00, 0x70, 0x00, 0x70,
0xbf, 0xcb, 0x7d, 0x00, 0x00, 0x78, 0x00, 0x78,
0xbf, 0xcb, 0x7d, 0x10, 0x00, 0x80, 0x00, 0x80,
0xbf, 0xcc, 0x7d, 0x00, 0x00, 0x88, 0x00, 0x88,
0xbf, 0xcc, 0x7d, 0x41, 0x00, 0x90, 0x00, 0x90,
0xbf, 0xcd, 0x7d, 0x00, 0x00, 0x98, 0x00, 0x98,
0xbf, 0xcd, 0x7d, 0x20, 0x00, 0xa0, 0x00, 0xa0,
0xbf, 0xce, 0x7d, 0x00, 0x00, 0xa8, 0x00, 0xa8,
0xbf, 0xce, 0x7d, 0x41, 0x00, 0xb0, 0x00, 0xb0,
0xbf, 0xcf, 0x7d, 0x00, 0x00, 0xb8, 0x00, 0xb8,
0xbf, 0xcf, 0x7d, 0x20, 0x00, 0xc0, 0x00, 0xc0,
0xbf, 0xd0, 0x7d, 0x00, 0x00, 0xc8, 0x00, 0xc8,
0xbf, 0xd0, 0x7d, 0x41, 0x00, 0xd0, 0x00, 0xd0,
0xbf, 0xd1, 0x7d, 0x00, 0x00, 0xd8, 0x00, 0xd8,
0xbf, 0xd1, 0x7d, 0x10, 0x00, 0xe0, 0x00, 0xe0,
0xbf, 0xd2, 0x7d, 0x00, 0x00, 0xe8, 0x00, 0xe8,
0xbf, 0xd2, 0x7d, 0x83, 0x00, 0xf0, 0x00, 0xf0,
0xbf, 0xd3, 0x7d, 0x00, 0x00, 0xf8, 0x00, 0xf8,
0xbf, 0xd3, 0x7d, 0x00, 0x01, 0x00, 0x01, 0x00,
0xbf, 0xd4, 0x7d, 0x00, 0x01, 0x08, 0x01, 0x08,
0xbf, 0xd4, 0x7d, 0x41, 0x01, 0x10, 0x01, 0x10,
0xbf, 0xd5, 0x7d, 0x00, 0x01, 0x18, 0x01, 0x18,
0xbf, 0xd5, 0x7d, 0x28, 0x01, 0x20, 0x01, 0x20,
0xbf, 0xd6, 0x7d, 0x00, 0x01, 0x28, 0x01, 0x28,
0xbf, 0xd6, 0x7d, 0x41, 0x01, 0x30, 0x01, 0x30,
0xbf, 0xd7, 0x7d, 0x00, 0x01, 0x38, 0x01, 0x38,
0xbf, 0xd7, 0x7d, 0x28, 0x01, 0x40, 0x01, 0x40,
0xbf, 0xd8, 0x7d, 0x00, 0x01, 0x48, 0x01, 0x48,
0xbf, 0xd8, 0x7d, 0x41, 0x01, 0x50, 0x01, 0x50,
0xbf, 0xd9, 0x7d, 0x00, 0x01, 0x58, 0x01, 0x58,
0xbf, 0xd9, 0x7d, 0x10, 0x01, 0x60, 0x01, 0x60,
0xbf, 0xdc, 0x7d, 0x00, 0x01, 0x68, 0x01, 0x68,
0xbf, 0xdc, 0x7d, 0x41, 0x01, 0x70, 0x01, 0x70,
0xbf, 0xdd, 0x7d, 0x00, 0x01, 0x78, 0x01, 0x78,
0xbf, 0xdd, 0x7d, 0x20, 0x01, 0x80, 0x01, 0x80,
0xbf, 0xde, 0x7d, 0x00, 0x01, 0x88, 0x01, 0x88,
0xbf, 0xde, 0x7d, 0x41, 0x01, 0x90, 0x01, 0x90,
0xbf, 0xdf, 0x7d, 0x00, 0x01, 0x98, 0x01, 0x98,
0xbf, 0xdf, 0x7d, 0x20, 0x01, 0xa0, 0x01, 0xa0,
0xbf, 0xe0, 0x7d, 0x00, 0x01, 0xa8, 0x01, 0xa8,
0xbf, 0xe0, 0x7d, 0x41, 0x01, 0xb0, 0x01, 0xb0,
0xbf, 0xe1, 0x7d, 0x00, 0x01, 0xb8, 0x01, 0xb8,
0xbf, 0xe1, 0x7d, 0x0f, 0x01, 0xc0, 0x01, 0xc0,
0xbf, 0xe2, 0x7d, 0x00, 0x01, 0xc8, 0x01, 0xc8,
0xbf, 0xe2, 0x7d, 0x83, 0x01, 0xd0, 0x01, 0xd0,
0xbf, 0xe3, 0x7d, 0x00, 0x01, 0xd8, 0x01, 0xd8,
0xbf, 0xe3, 0x7d, 0x00, 0x01, 0xe0, 0x01, 0xe0,
0x80, 0x10, 0x7d, 0x00, 0x01, 0xe8, 0x01, 0xe8,
0x80, 0x10, 0x7d, 0x00, 0x01, 0xf0, 0x01, 0xf0,
0x80, 0x10, 0x80, 0x10, 0x01, 0xf8, 0x07, 0x60,
0x80, 0x10, 0x7d, 0x00, 0x02, 0x00, 0x02, 0x00,
0x80, 0x10, 0x7d, 0x00, 0x02, 0x08, 0x02, 0x08,
0x80, 0x14, 0x7d, 0x00, 0x02, 0x10, 0x02, 0x10,
0x80, 0x14, 0x7d, 0x00, 0x02, 0x18, 0x02, 0x18,
0x80, 0x14, 0x80, 0x14, 0x02, 0x20, 0x03, 0x18,
0xbf, 0xf0, 0x7d, 0x00, 0x02, 0x28, 0x02, 0x28,
0xbf, 0xf0, 0xc0, 0x01, 0x02, 0x30, 0x02, 0x30,
0xbf, 0xf0, 0xbf, 0xf0, 0x02, 0x38, 0x02, 0x38,
0x80, 0x14, 0x7d, 0x00, 0x02, 0x40, 0x02, 0x40,
0x80, 0x14, 0xbf, 0xf0, 0x02, 0x48, 0x02, 0x48,
0x80, 0x14, 0x80, 0x14, 0x02, 0x50, 0x02, 0x58,
0x00, 0x14, 0x00, 0x14, 0x03, 0x18, 0x03, 0x18,
0x80, 0x14, 0x7d, 0x00, 0x02, 0x60, 0x02, 0x60,
0x80, 0x14, 0x80, 0x10, 0x02, 0x68, 0x02, 0x68,
0x80, 0x14, 0x80, 0x14, 0x02, 0x70, 0x02, 0x90,
0x80, 0x14, 0x7d, 0x00, 0x02, 0x78, 0x02, 0x78,
0x80, 0x14, 0x7d, 0x21, 0x02, 0x80, 0x02, 0x80,
0xc0, 0x00, 0x80, 0x14, 0x02, 0x88, 0x02, 0x88,
0x80, 0x10, 0x80, 0x10, 0x02, 0xb0, 0x02, 0xb0,
0x80, 0x14, 0x7d, 0x00, 0x02, 0x98, 0x02, 0x98,
0x80, 0x14, 0x7d, 0x01, 0x02, 0xa0, 0x02, 0xa0,
0xc0, 0x00, 0x80, 0x14, 0x02, 0xa8, 0x02, 0xa8,
0x80, 0x10, 0x80, 0x10, 0x02, 0xb0, 0x02, 0xb0,
0x80, 0x08, 0x7d, 0x00, 0x02, 0xb8, 0x02, 0xb8,
0x80, 0x08, 0x7d, 0x01, 0x02, 0xc0, 0x02, 0xc0,
0x80, 0x06, 0x7d, 0x00, 0x02, 0xc8, 0x02, 0xc8,
0x80, 0x06, 0x7d, 0xfe, 0x02, 0xd0, 0x02, 0xd0,
0x80, 0x07, 0x7d, 0x00, 0x02, 0xd8, 0x02, 0xd8,
0x80, 0x07, 0x7d, 0x20, 0x09, 0x40, 0x09, 0x40,
0x80, 0x08, 0x7d, 0x00, 0x02, 0xe8, 0x02, 0xe8,
0x80, 0x08, 0x7d, 0x01, 0x02, 0xf0, 0x02, 0xf0,
0x80, 0x06, 0x7d, 0x00, 0x02, 0xf8, 0x02, 0xf8,
0x80, 0x06, 0x7d, 0xfd, 0x03, 0x00, 0x03, 0x00,
0x80, 0x07, 0x7d, 0x00, 0x03, 0x08, 0x03, 0x08,
0x80, 0x07, 0x7d, 0xf0, 0x09, 0x40, 0x09, 0x40,
0x80, 0x14, 0x80, 0x14, 0x02, 0x08, 0x02, 0x08,
0x80, 0x0f, 0x7d, 0x00, 0x03, 0x20, 0x03, 0x20,
0x80, 0x0f, 0x7d, 0x00, 0x03, 0x28, 0x03, 0x28,
0x80, 0x0b, 0x7d, 0x00, 0x03, 0x30, 0x03, 0x30,
0x80, 0x0b, 0x7d, 0xfd, 0x03, 0x38, 0x03, 0x38,
0x80, 0x09, 0x7d, 0x00, 0x03, 0x40, 0x03, 0x40,
0x80, 0x09, 0x7d, 0xfd, 0x03, 0x48, 0x03, 0x48,
0x80, 0x0a, 0x7d, 0x00, 0x03, 0x50, 0x03, 0x50,
0x80, 0x0a, 0x7d, 0xa8, 0x09, 0xf8, 0x09, 0xf8,
0x80, 0x08, 0x7d, 0x00, 0x03, 0x60, 0x03, 0x60,
0x80, 0x08, 0x7d, 0x01, 0x03, 0x68, 0x03, 0x68,
0x80, 0x06, 0x7d, 0x00, 0x03, 0x70, 0x03, 0x70,
0x80, 0x06, 0x7d, 0xfd, 0x03, 0x78, 0x03, 0x78,
0x80, 0x07, 0x7d, 0x00, 0x03, 0x80, 0x03, 0x80,
0x80, 0x07, 0x7d, 0x78, 0x09, 0x40, 0x09, 0x40,
0x80, 0x0b, 0x7d, 0x00, 0x03, 0x90, 0x03, 0x90,
0x80, 0x0b, 0x7d, 0xfd, 0x03, 0x98, 0x03, 0x98,
0x80, 0x09, 0x7d, 0x00, 0x03, 0xa0, 0x03, 0xa0,
0x80, 0x09, 0x7d, 0xfd, 0x03, 0xa8, 0x03, 0xa8,
0x80, 0x0a, 0x7d, 0x00, 0x03, 0xb0, 0x03, 0xb0,
0x80, 0x0a, 0x7d, 0x48, 0x09, 0xf8, 0x09, 0xf8,
0x80, 0x08, 0x7d, 0x00, 0x03, 0xc0, 0x03, 0xc0,
0x80, 0x08, 0x7d, 0x80, 0x03, 0xc8, 0x03, 0xc8,
0x80, 0x06, 0x7d, 0x00, 0x03, 0xd0, 0x03, 0xd0,
0x80, 0x06, 0x7d, 0xfd, 0x03, 0xd8, 0x03, 0xd8,
0x80, 0x07, 0x7d, 0x00, 0x03, 0xe0, 0x03, 0xe0,
0x80, 0x07, 0x7d, 0x18, 0x09, 0x40, 0x09, 0x40,
0x80, 0x0b, 0x7d, 0x00, 0x03, 0xf0, 0x03, 0xf0,
0x80, 0x0b, 0x7d, 0xfd, 0x03, 0xf8, 0x03, 0xf8,
0x80, 0x09, 0x7d, 0x00, 0x04, 0x00, 0x04, 0x00,
0x80, 0x09, 0x7d, 0xfc, 0x04, 0x08, 0x04, 0x08,
0x80, 0x0a, 0x7d, 0x00, 0x04, 0x10, 0x04, 0x10,
0x80, 0x0a, 0x7d, 0xe8, 0x09, 0xf8, 0x09, 0xf8,
0x80, 0x0b, 0x7d, 0x00, 0x04, 0x20, 0x04, 0x20,
0x80, 0x0b, 0x7d, 0xfe, 0x04, 0x28, 0x04, 0x28,
0x80, 0x09, 0x7d, 0x00, 0x04, 0x30, 0x04, 0x30,
0x80, 0x09, 0x7d, 0xfc, 0x04, 0x38, 0x04, 0x38,
0x80, 0x0a, 0x7d, 0x00, 0x04, 0x40, 0x04, 0x40,
0x80, 0x0a, 0x7d, 0xb8, 0x09, 0xf8, 0x09, 0xf8,
0x80, 0x0e, 0x7d, 0x00, 0x04, 0x50, 0x04, 0x50,
0x80, 0x0e, 0x7d, 0xd8, 0x04, 0x58, 0x04, 0x58,
0x80, 0x0c, 0x7d, 0x00, 0x04, 0x60, 0x04, 0x60,
0x80, 0x0c, 0x7d, 0xfc, 0x04, 0x68, 0x04, 0x68,
0x80, 0x0d, 0x7d, 0x00, 0x04, 0x70, 0x04, 0x70,
0x80, 0x0d, 0x7d, 0x88, 0x0b, 0x00, 0x0b, 0x00,
0x80, 0x0e, 0x7d, 0x00, 0x04, 0x80, 0x04, 0x80,
0x80, 0x0e, 0x7d, 0xf4, 0x04, 0x88, 0x04, 0x88,
0x80, 0x0c, 0x7d, 0x00, 0x04, 0x90, 0x04, 0x90,
0x80, 0x0c, 0x7d, 0xfc, 0x04, 0x98, 0x04, 0x98,
0x80, 0x0d, 0x7d, 0x00, 0x04, 0xa0, 0x04, 0xa0,
0x80, 0x0d, 0x7d, 0x58, 0x0b, 0x00, 0x0b, 0x00,
0x80, 0x0e, 0x7d, 0x00, 0x04, 0xb0, 0x04, 0xb0,
0x80, 0x0e, 0x7d, 0xff, 0x04, 0xb8, 0x04, 0xb8,
0x80, 0x0c, 0x7d, 0x00, 0x04, 0xc0, 0x04, 0xc0,
0x80, 0x0c, 0x7d, 0xfc, 0x04, 0xc8, 0x04, 0xc8,
0x80, 0x0d, 0x7d, 0x00, 0x04, 0xd0, 0x04, 0xd0,
0x80, 0x0d, 0x7d, 0x28, 0x0b, 0x00, 0x0b, 0x00,
0x80, 0x08, 0x7d, 0x00, 0x04, 0xe0, 0x04, 0xe0,
0x80, 0x08, 0x7d, 0x80, 0x04, 0xe8, 0x04, 0xe8,
0x80, 0x06, 0x7d, 0x00, 0x04, 0xf0, 0x04, 0xf0,
0x80, 0x06, 0x7d, 0xfb, 0x04, 0xf8, 0x04, 0xf8,
0x80, 0x07, 0x7d, 0x00, 0x05, 0x00, 0x05, 0x00,
0x80, 0x07, 0x7d, 0xf8, 0x09, 0x40, 0x09, 0x40,
0x80, 0x0f, 0x7d, 0x00, 0x05, 0x10, 0x05, 0x10,
0x80, 0x0f, 0x7d, 0xc0, 0x05, 0x18, 0x05, 0x18,
0x80, 0x14, 0x7d, 0x00, 0x05, 0x20, 0x05, 0x20,
0x80, 0x14, 0x7d, 0xf3, 0x05, 0x28, 0x05, 0x28,
0x80, 0x15, 0x7d, 0x00, 0x05, 0x30, 0x05, 0x30,
0x80, 0x15, 0x7d, 0x68, 0x05, 0x38, 0x05, 0x38,
0x80, 0x11, 0x7d, 0x00, 0x05, 0x40, 0x05, 0x40,
0x80, 0x11, 0x80, 0x14, 0x05, 0x48, 0x05, 0x48,
0x80, 0x11, 0x80, 0x11, 0x05, 0x50, 0x05, 0x50,
0x80, 0x12, 0x7d, 0x00, 0x05, 0x58, 0x05, 0x58,
0x80, 0x12, 0x80, 0x15, 0x05, 0x60, 0x05, 0x60,
0x80, 0x12, 0x80, 0x12, 0x05, 0x68, 0x05, 0x68,
0xbf, 0xda, 0x7d, 0x00, 0x05, 0x70, 0x05, 0x70,
0xbf, 0xda, 0x80, 0x11, 0x05, 0x78, 0x05, 0x78,
0xbf, 0xda, 0xbf, 0xda, 0x05, 0x80, 0x05, 0x80,
0xbf, 0xdb, 0x7d, 0x00, 0x05, 0x88, 0x05, 0x88,
0xbf, 0xdb, 0x80, 0x12, 0x05, 0x90, 0x05, 0x90,
0xbf, 0xdb, 0xbf, 0xdb, 0x05, 0x98, 0x05, 0x98,
0xbf, 0xe6, 0x7d, 0x00, 0x05, 0xa0, 0x05, 0xa0,
0xbf, 0xe6, 0x7d, 0xfb, 0x05, 0xa8, 0x05, 0xa8,
0xbf, 0xe7, 0x7d, 0x00, 0x05, 0xb0, 0x05, 0xb0,
0xbf, 0xe7, 0x7d, 0x48, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x05, 0xc0, 0x05, 0xc0,
0x80, 0x13, 0x7d, 0x00, 0x05, 0xc8, 0x05, 0xc8,
0x80, 0x13, 0xbf, 0xf0, 0x05, 0xd0, 0x05, 0xd0,
0x80, 0x13, 0x80, 0x13, 0x05, 0xd8, 0x05, 0xd8,
0x80, 0x16, 0x7d, 0x00, 0x05, 0xe0, 0x05, 0xe0,
0x80, 0x16, 0x80, 0x13, 0x05, 0xe8, 0x05, 0xe8,
0x80, 0x16, 0x80, 0x16, 0x05, 0xf0, 0x07, 0x20,
0x80, 0x0e, 0x7d, 0x00, 0x05, 0xf8, 0x05, 0xf8,
0x80, 0x0e, 0x80, 0x13, 0x06, 0x00, 0x06, 0x00,
0x80, 0x0e, 0x80, 0x0e, 0x06, 0x08, 0x06, 0x08,
0x80, 0x0c, 0x7d, 0x00, 0x06, 0x10, 0x06, 0x10,
0x80, 0x0c, 0x7d, 0xfa, 0x06, 0x18, 0x06, 0x18,
0x80, 0x0d, 0x7d, 0x00, 0x06, 0x20, 0x06, 0x20,
0x80, 0x0d, 0x7d, 0xd8, 0x0b, 0x00, 0x0b, 0x00,
0x80, 0x04, 0x7d, 0x00, 0x06, 0x30, 0x06, 0x30,
0x80, 0x04, 0x80, 0x11, 0x06, 0x38, 0x06, 0x38,
0x80, 0x04, 0x80, 0x04, 0x06, 0x40, 0x06, 0x40,
0x80, 0x05, 0x7d, 0x00, 0x06, 0x48, 0x06, 0x48,
0x80, 0x05, 0x80, 0x12, 0x06, 0x50, 0x06, 0x50,
0x80, 0x05, 0x80, 0x05, 0x06, 0x58, 0x06, 0x58,
0x80, 0x02, 0x7d, 0x00, 0x06, 0x60, 0x06, 0x60,
0x80, 0x02, 0x7d, 0xfa, 0x06, 0x68, 0x06, 0x68,
0x80, 0x03, 0x7d, 0x00, 0x06, 0x70, 0x06, 0x70,
0x80, 0x03, 0x7d, 0x88, 0x07, 0x68, 0x07, 0x68,
0x80, 0x11, 0x7d, 0x00, 0x06, 0x80, 0x06, 0x80,
0x80, 0x11, 0x80, 0x00, 0x06, 0x88, 0x06, 0x88,
0x80, 0x11, 0x80, 0x11, 0x06, 0x90, 0x06, 0x90,
0x80, 0x12, 0x7d, 0x00, 0x06, 0x98, 0x06, 0x98,
0x80, 0x12, 0x80, 0x01, 0x06, 0xa0, 0x06, 0xa0,
0x80, 0x12, 0x80, 0x12, 0x06, 0xa8, 0x06, 0xa8,
0xbf, 0xda, 0x7d, 0x00, 0x06, 0xb0, 0x06, 0xb0,
0xbf, 0xda, 0x80, 0x11, 0x06, 0xb8, 0x06, 0xb8,
0xbf, 0xda, 0xbf, 0xda, 0x06, 0xc0, 0x06, 0xc0,
0xbf, 0xdb, 0x7d, 0x00, 0x06, 0xc8, 0x06, 0xc8,
0xbf, 0xdb, 0x80, 0x12, 0x06, 0xd0, 0x06, 0xd0,
0xbf, 0xdb, 0xbf, 0xdb, 0x06, 0xd8, 0x06, 0xd8,
0xbf, 0xe6, 0x7d, 0x00, 0x06, 0xe0, 0x06, 0xe0,
0xbf, 0xe6, 0x7d, 0xfa, 0x06, 0xe8, 0x06, 0xe8,
0xbf, 0xe7, 0x7d, 0x00, 0x06, 0xf0, 0x06, 0xf0,
0xbf, 0xe7, 0x7d, 0x08, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x07, 0x00, 0x07, 0x00,
0x80, 0x13, 0x7d, 0x00, 0x07, 0x08, 0x07, 0x08,
0x80, 0x13, 0xbf, 0xf0, 0x07, 0x10, 0x07, 0x10,
0x80, 0x13, 0x80, 0x13, 0x07, 0x18, 0x07, 0x18,
0x80, 0x16, 0x80, 0x16, 0x05, 0xd8, 0x05, 0xd8,
0xbf, 0xf0, 0x7d, 0x00, 0x07, 0x28, 0x07, 0x28,
0xbf, 0xf0, 0xc0, 0x01, 0x07, 0x30, 0x07, 0x30,
0xbf, 0xf0, 0xbf, 0xf0, 0x07, 0x38, 0x07, 0x38,
0x80, 0x16, 0x7d, 0x00, 0x07, 0x40, 0x07, 0x40,
0x80, 0x16, 0xbf, 0xf0, 0x07, 0x48, 0x07, 0x48,
0x80, 0x16, 0x80, 0x16, 0x07, 0x50, 0x07, 0x58,
0x80, 0x16, 0x80, 0x16, 0x07, 0x20, 0x07, 0x20,
0x80, 0x10, 0x80, 0x10, 0x01, 0xe0, 0x01, 0xe0,
0x80, 0x10, 0x80, 0x10, 0x07, 0x60, 0x07, 0x60,
0xbf, 0xda, 0x7d, 0x00, 0x07, 0x70, 0x07, 0x70,
0xbf, 0xda, 0x7d, 0x84, 0x07, 0x78, 0x07, 0x78,
0x80, 0x19, 0x7d, 0x00, 0x07, 0x80, 0x07, 0x80,
0x80, 0x19, 0x80, 0x05, 0x07, 0x88, 0x07, 0x88,
0x80, 0x19, 0x80, 0x19, 0x07, 0x90, 0x07, 0x90,
0xbf, 0xdb, 0x7d, 0x00, 0x07, 0x98, 0x07, 0x98,
0xbf, 0xdb, 0x80, 0x19, 0x07, 0xa0, 0x07, 0xa0,
0xbf, 0xdb, 0xbf, 0xdb, 0x07, 0xa8, 0x07, 0xa8,
0xbf, 0xe6, 0x7d, 0x00, 0x07, 0xb0, 0x07, 0xb0,
0xbf, 0xe6, 0x7d, 0xf9, 0x07, 0xb8, 0x07, 0xb8,
0xbf, 0xe7, 0x7d, 0x00, 0x07, 0xc0, 0x07, 0xc0,
0xbf, 0xe7, 0x7d, 0x38, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x07, 0xd0, 0x07, 0xd0,
0x80, 0x18, 0x7d, 0x00, 0x07, 0xd8, 0x07, 0xd8,
0x80, 0x18, 0xbf, 0xf0, 0x07, 0xe0, 0x07, 0xe0,
0x80, 0x18, 0x80, 0x18, 0x07, 0xe8, 0x07, 0xe8,
0x80, 0x19, 0x7d, 0x00, 0x07, 0xf0, 0x07, 0xf0,
0x80, 0x19, 0x80, 0x18, 0x07, 0xf8, 0x07, 0xf8,
0x80, 0x19, 0x80, 0x19, 0x08, 0x00, 0x08, 0x30,
0x80, 0x19, 0x7d, 0x00, 0x08, 0x08, 0x08, 0x08,
0x80, 0x19, 0x80, 0x04, 0x08, 0x10, 0x08, 0x10,
0x80, 0x19, 0x80, 0x19, 0x08, 0x18, 0x08, 0x18,
0x80, 0x17, 0x7d, 0x00, 0x08, 0x20, 0x08, 0x20,
0x80, 0x17, 0x80, 0x19, 0x08, 0x28, 0x08, 0x28,
0x80, 0x17, 0x80, 0x17, 0x08, 0xb0, 0x08, 0xb0,
0xbf, 0xda, 0x7d, 0x00, 0x08, 0x38, 0x08, 0x38,
0xbf, 0xda, 0x7d, 0x84, 0x08, 0x40, 0x08, 0x40,
0x80, 0x1a, 0x7d, 0x00, 0x08, 0x48, 0x08, 0x48,
0x80, 0x1a, 0x80, 0x04, 0x08, 0x50, 0x08, 0x50,
0x80, 0x1a, 0x80, 0x1a, 0x08, 0x58, 0x08, 0x58,
0xbf, 0xdb, 0x7d, 0x00, 0x08, 0x60, 0x08, 0x60,
0xbf, 0xdb, 0x80, 0x1a, 0x08, 0x68, 0x08, 0x68,
0xbf, 0xdb, 0xbf, 0xdb, 0x08, 0x70, 0x08, 0x70,
0xbf, 0xe6, 0x7d, 0x00, 0x08, 0x78, 0x08, 0x78,
0xbf, 0xe6, 0x7d, 0xf8, 0x08, 0x80, 0x08, 0x80,
0xbf, 0xe7, 0x7d, 0x00, 0x08, 0x88, 0x08, 0x88,
0xbf, 0xe7, 0x7d, 0x70, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x08, 0x98, 0x08, 0x98,
0x80, 0x17, 0x7d, 0x00, 0x08, 0xa0, 0x08, 0xa0,
0x80, 0x17, 0xbf, 0xf0, 0x08, 0xa8, 0x08, 0xa8,
0x80, 0x17, 0x80, 0x17, 0x08, 0xb0, 0x08, 0xb0,
0x80, 0x1a, 0x7d, 0x00, 0x08, 0xb8, 0x08, 0xb8,
0x80, 0x1a, 0x80, 0x17, 0x08, 0xc0, 0x08, 0xc0,
0x80, 0x1a, 0x80, 0x1a, 0x08, 0xc8, 0x08, 0xc8,
0x80, 0x1b, 0x7d, 0x00, 0x08, 0xd0, 0x08, 0xd0,
0x80, 0x1b, 0x80, 0x18, 0x08, 0xd8, 0x08, 0xd8,
0x80, 0x1b, 0x80, 0x1b, 0x08, 0xe0, 0x08, 0xe0,
0x80, 0x00, 0x7d, 0x00, 0x08, 0xe8, 0x08, 0xe8,
0x80, 0x00, 0x80, 0x1a, 0x08, 0xf0, 0x08, 0xf0,
0x80, 0x00, 0x80, 0x00, 0x08, 0xf8, 0x08, 0xf8,
0x80, 0x01, 0x7d, 0x00, 0x09, 0x00, 0x09, 0x00,
0x80, 0x01, 0x80, 0x1b, 0x09, 0x08, 0x09, 0x08,
0x80, 0x01, 0x80, 0x01, 0x09, 0x10, 0x09, 0x10,
0xbf, 0xe6, 0x7d, 0x00, 0x09, 0x18, 0x09, 0x18,
0xbf, 0xe6, 0x80, 0x02, 0x09, 0x20, 0x09, 0x20,
0xbf, 0xe6, 0xbf, 0xe6, 0x09, 0x28, 0x09, 0x28,
0xbf, 0xe7, 0x7d, 0x00, 0x09, 0x30, 0x09, 0x30,
0xbf, 0xe7, 0x80, 0x03, 0x09, 0x38, 0x09, 0x38,
0xbf, 0xe7, 0xbf, 0xe7, 0xbf, 0xe0, 0xbf, 0xe0,
0x80, 0x1c, 0x7d, 0x00, 0x09, 0x48, 0x09, 0x48,
0x80, 0x1c, 0x80, 0x08, 0x09, 0x50, 0x09, 0x50,
0x80, 0x1c, 0x80, 0x1c, 0x09, 0x58, 0x09, 0xc8,
0xbf, 0xda, 0x7d, 0x00, 0x09, 0x60, 0x09, 0x60,
0xbf, 0xda, 0x7d, 0x83, 0x09, 0x68, 0x09, 0x68,
0xbf, 0xdb, 0x7d, 0x00, 0x09, 0x70, 0x09, 0x70,
0xbf, 0xdb, 0x80, 0x08, 0x09, 0x78, 0x09, 0x78,
0xbf, 0xdb, 0xbf, 0xdb, 0x09, 0x80, 0x09, 0x80,
0xbf, 0xe6, 0x7d, 0x00, 0x09, 0x88, 0x09, 0x88,
0xbf, 0xe6, 0x7d, 0xf7, 0x09, 0x90, 0x09, 0x90,
0xbf, 0xe7, 0x7d, 0x00, 0x09, 0x98, 0x09, 0x98,
0xbf, 0xe7, 0x7d, 0x60, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x09, 0xa8, 0x09, 0xa8,
0x80, 0x08, 0x7d, 0x00, 0x09, 0xb0, 0x09, 0xb0,
0x80, 0x08, 0xbf, 0xf0, 0x09, 0xb8, 0x09, 0xb8,
0x80, 0x08, 0x80, 0x08, 0x09, 0xc0, 0x09, 0xc0,
0x80, 0x1c, 0x80, 0x1c, 0x09, 0x40, 0x09, 0x40,
0xbf, 0xe6, 0x7d, 0x00, 0x09, 0xd0, 0x09, 0xd0,
0xbf, 0xe6, 0x80, 0x06, 0x09, 0xd8, 0x09, 0xd8,
0xbf, 0xe6, 0xbf, 0xe6, 0x09, 0xe0, 0x09, 0xe0,
0xbf, 0xe7, 0x7d, 0x00, 0x09, 0xe8, 0x09, 0xe8,
0xbf, 0xe7, 0x80, 0x07, 0x09, 0xf0, 0x09, 0xf0,
0xbf, 0xe7, 0xbf, 0xe7, 0xbf, 0xe0, 0xbf, 0xe0,
0x80, 0x1e, 0x7d, 0x00, 0x0a, 0x00, 0x0a, 0x00,
0x80, 0x1e, 0x80, 0x0f, 0x0a, 0x08, 0x0a, 0x08,
0x80, 0x1f, 0x7d, 0x00, 0x0a, 0x10, 0x0a, 0x10,
0x80, 0x1f, 0x7d, 0xf1, 0x0a, 0x18, 0x0a, 0x18,
0x80, 0x1e, 0x80, 0x1f, 0x0a, 0x20, 0x0a, 0x20,
0x80, 0x1d, 0x7d, 0x00, 0x0a, 0x28, 0x0a, 0x28,
0x80, 0x1d, 0x80, 0x1e, 0x0a, 0x30, 0x0a, 0x30,
0x80, 0x1d, 0x80, 0x1d, 0x0a, 0x38, 0x0a, 0x38,
0x80, 0x1d, 0x80, 0x0b, 0x0a, 0x40, 0x0a, 0x40,
0x80, 0x1d, 0x80, 0x1d, 0x0a, 0x48, 0x0a, 0x48,
0x80, 0x0f, 0x7d, 0x00, 0x0a, 0x50, 0x0a, 0x50,
0x80, 0x0f, 0x80, 0x1d, 0x0a, 0x58, 0x0a, 0x58,
0x80, 0x0f, 0x80, 0x0f, 0x0a, 0x60, 0x0a, 0x60,
0x80, 0x1d, 0x7d, 0x00, 0x0a, 0x68, 0x0a, 0x68,
0x80, 0x1d, 0x80, 0x0f, 0x0a, 0x70, 0x0a, 0x70,
0xc0, 0x00, 0x80, 0x1d, 0x0a, 0x78, 0x0a, 0x78,
0x80, 0x1d, 0x7d, 0x00, 0x0a, 0x80, 0x0a, 0x80,
0x80, 0x1d, 0x80, 0x0f, 0x0a, 0x88, 0x0a, 0x88,
0x80, 0x1d, 0x80, 0x1d, 0x0a, 0x90, 0x0a, 0x90,
0x80, 0x1d, 0x7d, 0x81, 0x0a, 0x98, 0x0a, 0x98,
0x80, 0x1d, 0x80, 0x1d, 0x0a, 0xa0, 0x0a, 0xa0,
0x80, 0x1e, 0x7d, 0x00, 0x0a, 0xa8, 0x0a, 0xa8,
0x80, 0x1e, 0x80, 0x1d, 0x0a, 0xb0, 0x0a, 0xb0,
0xc0, 0x00, 0x80, 0x1e, 0x0a, 0xb8, 0x0a, 0xb8,
0x80, 0x1d, 0x7d, 0x00, 0x0a, 0xc0, 0x0a, 0xc0,
0x80, 0x1d, 0x80, 0x0f, 0x0a, 0xc8, 0x0a, 0xc8,
0xc0, 0x00, 0x80, 0x1d, 0x0a, 0xd0, 0x0a, 0xd0,
0xbf, 0xe6, 0x7d, 0x00, 0x0a, 0xd8, 0x0a, 0xd8,
0xbf, 0xe6, 0x80, 0x09, 0x0a, 0xe0, 0x0a, 0xe0,
0xbf, 0xe6, 0xbf, 0xe6, 0x0a, 0xe8, 0x0a, 0xe8,
0xbf, 0xe7, 0x7d, 0x00, 0x0a, 0xf0, 0x0a, 0xf0,
0xbf, 0xe7, 0x80, 0x0a, 0x0a, 0xf8, 0x0a, 0xf8,
0xbf, 0xe7, 0xbf, 0xe7, 0xbf, 0xe0, 0xbf, 0xe0,
0xbf, 0xda, 0x7d, 0x00, 0x0b, 0x08, 0x0b, 0x08,
0xbf, 0xda, 0x7d, 0x81, 0x0b, 0x10, 0x0b, 0x10,
0xbf, 0xdb, 0x7d, 0x00, 0x0b, 0x18, 0x0b, 0x18,
0xbf, 0xdb, 0x80, 0x0e, 0x0b, 0x20, 0x0b, 0x20,
0xbf, 0xdb, 0xbf, 0xdb, 0x0b, 0x28, 0x0b, 0x28,
0xbf, 0xe6, 0x7d, 0x00, 0x0b, 0x30, 0x0b, 0x30,
0xbf, 0xe6, 0x7d, 0xf5, 0x0b, 0x38, 0x0b, 0x38,
0xbf, 0xe7, 0x7d, 0x00, 0x0b, 0x40, 0x0b, 0x40,
0xbf, 0xe7, 0x7d, 0xb8, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x0b, 0x50, 0x0b, 0x50,
0x80, 0x20, 0x7d, 0x00, 0x0b, 0x58, 0x0b, 0x58,
0x80, 0x20, 0xbf, 0xf0, 0x0b, 0x60, 0x0b, 0x60,
0x80, 0x20, 0x80, 0x20, 0x0b, 0x68, 0x0b, 0x68,
0xbf, 0xda, 0x7d, 0x00, 0x0b, 0x70, 0x0b, 0x70,
0xbf, 0xda, 0x7d, 0x81, 0x0b, 0x78, 0x0b, 0x78,
0xbf, 0xdb, 0x7d, 0x00, 0x0b, 0x80, 0x0b, 0x80,
0xbf, 0xdb, 0x80, 0x20, 0x0b, 0x88, 0x0b, 0x88,
0xbf, 0xdb, 0xbf, 0xdb, 0x0b, 0x90, 0x0b, 0x90,
0xbf, 0xe6, 0x7d, 0x00, 0x0b, 0x98, 0x0b, 0x98,
0xbf, 0xe6, 0x7d, 0xf5, 0x0b, 0xa0, 0x0b, 0xa0,
0xbf, 0xe7, 0x7d, 0x00, 0x0b, 0xa8, 0x0b, 0xa8,
0xbf, 0xe7, 0x7d, 0x50, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x0b, 0xb8, 0x0b, 0xb8,
0x80, 0x20, 0x7d, 0x00, 0x0b, 0xc0, 0x0b, 0xc0,
0x80, 0x20, 0xbf, 0xf0, 0x0b, 0xc8, 0x0b, 0xc8,
0x80, 0x20, 0x80, 0x20, 0x0b, 0xd0, 0x0b, 0xd0,
0xbf, 0xda, 0x7d, 0x00, 0x0b, 0xd8, 0x0b, 0xd8,
0xbf, 0xda, 0x7d, 0x81, 0x0b, 0xe0, 0x0b, 0xe0,
0xbf, 0xdb, 0x7d, 0x00, 0x0b, 0xe8, 0x0b, 0xe8,
0xbf, 0xdb, 0x80, 0x20, 0x0b, 0xf0, 0x0b, 0xf0,
0xbf, 0xdb, 0xbf, 0xdb, 0x0b, 0xf8, 0x0b, 0xf8,
0xbf, 0xe6, 0x7d, 0x00, 0x0c, 0x00, 0x0c, 0x00,
0xbf, 0xe6, 0x7d, 0xf4, 0x0c, 0x08, 0x0c, 0x08,
0xbf, 0xe7, 0x7d, 0x00, 0x0c, 0x10, 0x0c, 0x10,
0xbf, 0xe7, 0x7d, 0xe8, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x0c, 0x20, 0x0c, 0x20,
0x80, 0x20, 0x7d, 0x00, 0x0c, 0x28, 0x0c, 0x28,
0x80, 0x20, 0xbf, 0xf0, 0x0c, 0x30, 0x0c, 0x30,
0x80, 0x20, 0x80, 0x20, 0x0c, 0x38, 0x0c, 0x38,
0xbf, 0xda, 0x7d, 0x00, 0x0c, 0x40, 0x0c, 0x40,
0xbf, 0xda, 0x7d, 0x81, 0x0c, 0x48, 0x0c, 0x48,
0xbf, 0xdb, 0x7d, 0x00, 0x0c, 0x50, 0x0c, 0x50,
0xbf, 0xdb, 0x80, 0x20, 0x0c, 0x58, 0x0c, 0x58,
0xbf, 0xdb, 0xbf, 0xdb, 0x0c, 0x60, 0x0c, 0x60,
0xbf, 0xe6, 0x7d, 0x00, 0x0c, 0x68, 0x0c, 0x68,
0xbf, 0xe6, 0x7d, 0xf4, 0x0c, 0x70, 0x0c, 0x70,
0xbf, 0xe7, 0x7d, 0x00, 0x0c, 0x78, 0x0c, 0x78,
0xbf, 0xe7, 0x7d, 0x80, 0xbf, 0xd0, 0xbf, 0xd0,
0xbf, 0xf0, 0xbf, 0xf0, 0x0c, 0x88, 0x0c, 0x88,
0x80, 0x20, 0x7d, 0x00, 0x0c, 0x90, 0x0c, 0x90,
0x80, 0x20, 0xbf, 0xf0, 0x0c, 0x98, 0x0c, 0x98,
0x80, 0x20, 0x80, 0x20, 0x0c, 0xa0, 0x0c, 0xa0,
0x80, 0x0b, 0x7d, 0x00, 0x0c, 0xa8, 0x0c, 0xa8,
0x80, 0x0b, 0x80, 0x20, 0x0c, 0xb0, 0x0c, 0xb0,
0x80, 0x0b, 0x80, 0x0b, 0x0c, 0xb8, 0x0c, 0xb8,
0x80, 0x09, 0x7d, 0x00, 0x0c, 0xc0, 0x0c, 0xc0,
0x80, 0x09, 0x7d, 0xf4, 0x0c, 0xc8, 0x0c, 0xc8,
0x80, 0x0a, 0x7d, 0x00, 0x0c, 0xd0, 0x0c, 0xd0,
0x80, 0x0a, 0x7d, 0x28, 0x09, 0xf8, 0x09, 0xf8,
0x80, 0x08, 0x7d, 0x00, 0x0c, 0xe0, 0x0c, 0xe0,
0x80, 0x08, 0x7d, 0xff, 0x0c, 0xe8, 0x0c, 0xe8,
0x80, 0x06, 0x7d, 0x00, 0x0c, 0xf0, 0x0c, 0xf0,
0x80, 0x06, 0x7d, 0xf3, 0x0c, 0xf8, 0x0c, 0xf8,
0x80, 0x07, 0x7d, 0x00, 0x0d, 0x00, 0x0d, 0x00,
0x80, 0x07, 0x7d, 0xf8, 0x09, 0x40, 0x09, 0x40,
0x80, 0x21, 0x7d, 0x00, 0x0d, 0x10, 0x0d, 0x10,
0x80, 0x21, 0x80, 0x0e, 0x0d, 0x18, 0x0d, 0x18,
0x80, 0x22, 0x7d, 0x00, 0x0d, 0x20, 0x0d, 0x20,
0x80, 0x22, 0x7d, 0x10, 0x0d, 0x28, 0x0d, 0x28,
0x80, 0x21, 0x80, 0x22, 0x0d, 0x30, 0x0d, 0x30,
0x80, 0x0b, 0x7d, 0x00, 0x0d, 0x38, 0x0d, 0x38,
0x80, 0x0b, 0x80, 0x21, 0x0d, 0x40, 0x0d, 0x40,
0x80, 0x0b, 0x80, 0x0b, 0x0d, 0x48, 0x0d, 0x48,
0x80, 0x09, 0x7d, 0x00, 0x0d, 0x50, 0x0d, 0x50,
0x80, 0x09, 0x7d, 0xf3, 0x0d, 0x58, 0x0d, 0x58,
0x80, 0x0a, 0x7d, 0x00, 0x0d, 0x60, 0x0d, 0x60,
0x80, 0x0a, 0x7d, 0x98, 0x09, 0xf8, 0x09, 0xf8,
0xbf, 0xe6, 0x7d, 0x00, 0x0d, 0x70, 0x0d, 0x70,
0xbf, 0xe6, 0x80, 0x0c, 0x0d, 0x78, 0x0d, 0x78,
0xbf, 0xe6, 0xbf, 0xe6, 0x0d, 0x80, 0x0d, 0x80,
0xbf, 0xe7, 0x7d, 0x00, 0x0d, 0x88, 0x0d, 0x88,
0xbf, 0xe7, 0x80, 0x0d, 0x0d, 0x90, 0x0d, 0x90,
0xbf, 0xe7, 0xbf, 0xe7, 0xbf, 0xe0, 0xbf, 0xe0,
0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77,
0x6f, 0x72, 0x6c, 0x64, 0x21, 0x00, 0x00, 0x00
};

inline void write(char value)
{
  PORTD = (PORTD & 0x03) | (value & 0xfc);
  PORTC = (PORTC & 0xfc) | (value & 0x03);
}

inline char read()
{
  return (PIND & 0xfc) | (PINC & 0x03);
}

inline void attach()
{
  DDRD |= 0xfc;
  DDRC |= 0x03;
}

inline void detach()
{
  DDRD &= ~0xfc;
  DDRC &= ~0x03;
  write(0);
}

void setup()
{
  Serial.begin(9600);
  PORTC = 0x3c;
  DDRC = 0x3c;    // bit outputs only
  detach();
}

char val;

void loop()
{
  if (Serial.available() <= 0)
    return;
  char c = Serial.read();
  if (c == 'p')
  {
    Serial.print("data: 0x");
    Serial.println((uint8_t)read(), HEX);
  }
  else if (c == 'w')
  {
    uint8_t data = Serial.parseInt();
    Serial.print("Writing data: ");
    Serial.println(data, HEX);
    write(data);
  }
  else if (c == 'a')
  {
    attach();
    Serial.println("Attached.");
  }
  else if (c == 'd')
  {
    detach();
    Serial.println("Detached.");
  }
  else if (c == 's')
  {
    delay(100);
    char pin = Serial.read();
    if (pin >= 'e' && pin <= 'h')
    {
      PORTC |= 0x04 << (pin - 'e');
      Serial.print("Set bit ");
      Serial.println(pin);
    }
    else
    {
      Serial.print("Unrecognised pin: ");
      Serial.println(pin);
    }
  }
  else if (c == 'c')
  {
    delay(100);
    char pin = Serial.read();
    if (pin >= 'e' && pin <= 'h')
    {
      PORTC &= ~(0x04 << (pin - 'e'));
      Serial.print("Cleared bit ");
      Serial.println(pin);
    }
    else
    {
      Serial.print("Unrecognised pin: ");
      Serial.println(pin);
    }
  }
  else if (c == 'r')
  {
    Serial.println("Reading EEPROM...");
    detach();
    PORTC = pin_g | pin_h;
    for (int i = 0; i < ROM_SIZE; i++)
    {
      Serial.println(i);
      attach();
      write((i >> 8) & 0xff);
      PORTC |= pin_e;
      PORTC &= ~pin_e;
      write(i & 0xff);
      PORTC |= pin_f;
      PORTC &= ~pin_f;
      detach();
      PORTC &= ~pin_g;
      Serial.print("0x");
      Serial.println((uint8_t)read(), HEX);
      PORTC |= pin_g;
    }
  }
  else if (c == 'R')
  {
    Serial.println("Programming EEPROM...");
    bool failed = false;
    detach();
    PORTC = pin_g | pin_h;
    for (uint16_t i = ROM_BASE; i < ROM_BASE + ROM_SIZE; i++)
    {
      if ((i & 0x7f) == 0)
      {
        Serial.print(((uint32_t)i - ROM_BASE) * 100 / ROM_SIZE);
        Serial.println("%");
      }
      uint8_t value = pgm_read_byte(&(rombuffer[i - ROM_BASE])); 
      attach();
      write((i >> 8) & 0xff);
      PORTC |= pin_e;
      PORTC &= ~pin_e;
      write(i & 0xff);
      PORTC |= pin_f;
      PORTC &= ~pin_f;
      write(value);
      PORTC &= ~pin_h;
      PORTC |= pin_h;
      detach();
      delay(5);
      PORTC &= ~pin_g;
      delay(7);
      uint8_t readback = read();
      if (readback != value)
      {
        Serial.print("Error at index 0x");
        Serial.print(i, HEX);
        Serial.print(": wrote 0x");
        Serial.print(value, HEX);
        Serial.print(", got 0x");
        Serial.println(readback, HEX);
        failed = true;
        break;
      }
      PORTC |= pin_g;
    }
    if (!failed)
    {
      Serial.println("Write successful.");
    }
  }
  else if (c == 'P')
  {
    detach();
    while (true)
    {
      Serial.println((uint8_t)read(), HEX);
      delay(10);
    }
  }
  else if (c != '\n' && c != ' ')
  {
    Serial.println("Usage:");
    Serial.println("p: probe");
    Serial.println("w: write data");    
    Serial.println("a/d: attach/detach");
    Serial.println("(s/c)(efgh): set/clear bit");
  }
  while (Serial.available() <= 0)
    Serial.read();      // eat up all the newlines etc.  
}

