const pointer debugout = 0xc000;
const pointer debugin = 0xc001;
const int true = 0xff;
const int false = 0x00;

function int read(pointer p);
function int increment(int x);
function int decrement(int x);
function int shiftleft(int x);
function int shiftright(int x);

macro output(src, dest)
{
    var int temp;
    nfc(temp, val(0xff));
    nfc(temp, src);
    nfc(dest, temp);
}

function int andnot(int a, int b);
function int and(int a, int b);
function int or(int a, int b);
function int xor(int a, int b);

function int equal(int a, int b)
{
    if (xor(a, b))
        equal = 0;
    else
        equal = 1;
}

function main()
{
    while (true)
    {
        var int x, op;
        x = read(debugin);
        op = and(x, 0xc0);
        x = and(x, 0x3f);
        var int temp;
        nfc(temp, val(0xff));
        if (equal(op, 0x00))
        {
            nfc(temp, increment(x));
        }
        else if (equal(op, 0x40))
        {
            nfc(temp, decrement(x));
        }
        else if (equal(op, 0x80))
        {
            nfc(temp, shiftleft(x));
        }
        else
        {
            nfc(temp, shiftright(x));
        }
        nfc(debugout, temp);
    }
}
