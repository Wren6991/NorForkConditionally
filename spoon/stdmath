// 8 bit

function int add(int a, int b)
{
    var int carry, temp;
    add = xor(a, b);
    carry = shiftleft(and(a, b));
    while (carry)
    {
        temp = add;
        add = xor(add, carry);
        carry = shiftleft(and(temp, carry));
    }
}

function int subtract(int a, int b)
{
    b = increment(not(b));	// two's complement negate
    subtract = add(a, b);
}

/*function int multiply(a, b)
{
    multiply = 0;
    while (b)
    {
        multiply = add(multiply, a);
        b = decrement(b);
    }
}*/

// 16 bit

function pointer incrementPointer(pointer p)
{
    var int a, b;
    b = increment(second(p));
    if (b)
        a = first(p);
    else
        a = increment(first(p));
    incrementPointer = pair(a, b);
}